- name: EDA Controller | Retrieve rulebooks for given project
  ansible.builtin.uri:
    url: "{{ eda_controller_url }}/api/eda/v1/rulebooks/?project_id={{ eda_project_id }}"
    force_basic_auth: true
    url_username: "{{ eda_controller_user }}"
    url_password: "{{ eda_controller_password }}"
    method: GET
    validate_certs: false
    status_code:
      - 200
      - 201
  register: _rulebooks

- name: EDA Controller | Build rulebook id/rulebook association for activations
  ansible.builtin.set_fact:
    rulebook_list: "{{ rulebook_list | default([]) + [{'name': item.name, 'id': _rulebooks | community.general.json_query(rulebook_query) | join('') | int}] }}"
  vars:
    rulebook_query: "json.results[?name=='{{ item.rulebook }}'].id"
  loop: "{{ eda_activations }}"

- name: EDA Controller | Create extra vars for activations if present
  ansible.builtin.uri:
    url: "{{ eda_controller_url }}/api/eda/v1/extra-vars/"
    force_basic_auth: true
    url_username: "{{ eda_controller_user }}"
    url_password: "{{ eda_controller_password }}"
    method: POST
    body: {"extra_var": "{{ item.extra_vars | default(null, true) | string }}"}
    body_format: json
    validate_certs: false
    status_code:
      - 200
      - 201
  loop: "{{ eda_activations }}"
  register: _extra_vars
  when: item.extra_vars is defined and item.extra_vars != ""


- name: EDA Controller | Attach extra vars to activations
  ansible.builtin.set_fact:
    extra_vars_list: "{{ extra_vars_list | default([]) + [{'name': item.item.name, 'var_id': item.json.id | int}] }}"
  loop: "{{ _extra_vars.results }}"
  when: item.json.id is defined

# - name: EDA Controller | Create temporary dictionary
#   ansible.builtin.set_fact:
#     temp_dict: >-
#       {{
#         temp_dict | default({})
#         | combine({item.name: {'name': item.name, 'id': item.id}})
#       }}
#   loop: "{{ rulebook_list }}"

# - name: EDA Controller | Join rulebook_list and extra_vars_list
#   ansible.builtin.set_fact:
#     activations_list: >-
#       {{
#         activations_list | default([])
#         + [temp_dict[item.name] | combine({'var_id': item.var_id})]
#         if item.name in temp_dict else item
#       }}
#   loop: "{{ extra_vars_list }}"

# - name: Add remaining rulebook_list entries
#   ansible.builtin.set_fact:
#     activations_list: >-
#       {{
#         activations_list | default([]) | union(rulebook_list)
#       }}
#   loop: "{{ rulebook_list }}"

- name: Join rulebook_list and extra_vars_list
  set_fact:
    activations_list: "{{ activations_list | default([]) + [item | combine({'var_id': (extra_vars_list | selectattr('name', 'equalto', item.name) | map(attribute='var_id') | first)}) | default(item, true)]}}"
  loop: "{{ rulebook_list }}"

- name: EDA Controller | Create activations for given project
  ansible.builtin.uri:
    url: "{{ eda_controller_url }}/api/eda/v1/activations/"
    force_basic_auth: true
    url_username: "{{ eda_controller_user }}"
    url_password: "{{ eda_controller_password }}"
    method: POST
    body: {"restart_policy":"{{ restart_policy | default('always', true) }}","is_enabled":"{{ enabled | default(true, true) | bool }}","name":"{{ item.name }}","project_id":"{{ eda_project_id | int }}","decision_environment_id":"{{ eda_denv_id | int }}","rulebook_id":"{{ item.id | int }}", "extra_var_id": "{{ item.var_id }}"}
    body_format: json
    validate_certs: false
    status_code:
      - 200
      - 201
  loop: "{{ activations_list }}"
  when: item.var_id is defined

- name: EDA Controller | Create activations for given project
  ansible.builtin.uri:
    url: "{{ eda_controller_url }}/api/eda/v1/activations/"
    force_basic_auth: true
    url_username: "{{ eda_controller_user }}"
    url_password: "{{ eda_controller_password }}"
    method: POST
    body: {"restart_policy":"{{ restart_policy | default('always', true) }}","is_enabled":"{{ enabled | default(true, true) | bool }}","name":"{{ item.name }}","project_id":"{{ eda_project_id | int }}","decision_environment_id":"{{ eda_denv_id | int }}","rulebook_id":"{{ item.id | int }}"}
    body_format: json
    validate_certs: false
    status_code:
      - 200
      - 201
  loop: "{{ activations_list }}"
  when: item.var_id is not defined
